""" Земная модель координат и гравитации. Основано на стандарте WGS84. """
import numpy as np
from math import sin


GMe = 3.986004418e14            # Гравитационная постоянная Земли(м^3/с^2).
Me = 5.98e24                    # Масса Земли (кг).

G = 6.673e-11                   # Гравитационная постоянная (м^3/кг * с^2).
Ge = 9.7803253359               # Ускорение силы тяжести на экваторе (м/с^2).
Gp = 9.8321849378               # Ускорение силы тяжести на полюсе (м/с^2).

Re = 6378137                    # Экваториальная полуось (м).
Rp = 6356752.3142               # Полюсная полуось (м).
FLATTING = (Re - Rp) / Re       # Сжатие.
E2 = 1 - Re ** 2 / Rp ** 2      # Эксцентриситет.

RATE = 7.292115e-5              # Угловая скорость вращения Земли (рад/с).


def gravity(latitude, altitude):
    """
    Расчет ведется по формуле взятой из "Гравиметрия - Грушинский Н.П."
    Это эмпирическая формула, справедливая для небольших отклонений от поверхности земли.
    :param latitude: широта (рад).
    :param altitude: высота над уровнем моря (м).
    :return: гравитационное ускорение (м/с^2).
    """
    return 9.780318 * (1 + 0.005302 * sin(latitude) ** 2
                       - 0.000006 * sin(2 * latitude) ** 2) - 0.000003086 * altitude


def local_rate(dcm, v, alt):
    rx = (1 - E2 * dcm[2, 2] ** 2 / 2 + E2 * dcm[0, 2] ** 2 - alt / Re) / Re
    ry = (1 - E2 * dcm[2, 2] ** 2 / 2 + E2 * dcm[1, 2] ** 2 - alt / Re) / Re
    omega_x = -v[1] * ry - v[0] * E2 * dcm[0, 2] * dcm[1, 2] / Re
    omega_y = v[0] * rx + v[1] * E2 * dcm[0, 2] * dcm[1, 2] / Re
    return np.array([omega_x, omega_y, 0.])


def earth_rate(dcm):
    return dcm[:, -1] * RATE
